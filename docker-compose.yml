services:
  gymtec_api:
    image: alexmonterov/gymtec_api:latest
    ports:
      - "5000:5000"
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgresdb
    networks:
      - backend
    

  postgresdb:
    image: postgres:latest
    container_name: gymtec_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Docker/postgresql/init-db:/docker-entrypoint-initdb.d
    networks:
      - backend
    

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_USERNAME: ${PGADMIN_DEFAULT_USERNAME}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      -  postgresdb
    networks:
      - backend
    
  nginx:
      image: nginx:latest
      container_name: gymtec_nginx
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./Docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./Docker/sslcerts:/etc/nginx/sslcerts:ro  # Monta la carpeta de certificados
      depends_on:
        - gymtec_api
        - postgresdb
        - pgadmin
      restart: always
      networks:
        - backend

  gymtec_web:
    image: node:18-alpine
    container_name: gymtec_web
    working_dir: /app
    volumes:
      - ./GymTec_web:/app
    command: sh -c "npm install && npm run start"
    ports:
      - "3000:3000"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
